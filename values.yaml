# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

testserviceAccount:
  name: "iriusrisk"

service:
  type: ClusterIP
  port: 3000

iriusrisk: 
  replicas: 1
  app: 
    name: iriusrisk
  
     
nginx:
  image:
    repository: continuumsecurity/iriusrisk-prod:nginx-prod-ssl
    tag: latest #put a version here
    pullPolicy: IfNotPresent
  imagePullSecrets: []
  env:
    NG_SERVER_NAME: localhost # 192.168.1.228
  containerportHTTP: 80
  containerportHTTPS: 443
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi 

postgresql:
#  service: {{ .Release.Name }}-postgresql

tomcat:
  image:
    repository: continuumsecurity/iriusrisk-prod:tomcat8-2
    tag: latest #put a version here
    pullPolicy: IfNotPresent
  imagePullSecrets: []
  env:
    IRIUS_DB_URL: jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/iriusprod?user=iriusprod&password=alongandcomplexpassword2523 #example shows back slashes too? IRIUS_DB_URL=jdbc\:postgresql\://172.17.0.1\:5432/iriusprod?user\=iriusprod&password\=alongandcomplexpassword2523
    IRIUS_EDITION: saas   
    IRIUS_EXT_URL: http://{{ .Values.nginx.env.NG_SERVER_NAME }} # http://192.168.1.228 #example shows back slashes too? http\://youririusriskendpoint.com
    grails_env: production
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi     

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template

#==============================need to sort out all of the below=================================================================================================
#================================================================================================================================================================
#================================================================================================================================================================
#================================================================================================================================================================
#================================================================================================================================================================
#================================================================================================================================================================

podSecurityContext:
  fsGroup: 1000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    ## allow large bom.xml uploads:
    # nginx.ingress.kubernetes.io/proxy-body-size: 10m
  hosts:
     -  iriusrisk.libertyopenshift.us-south.containers.appdomain.cloud

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

nodeSelector: {}

tolerations: []

affinity: {}

persistentVolume:
  enabled: true
  size: 8Gi
  annotations: {}
  storageClass: ""

emptyDir:
  sizeLimit: 8Gi

postgresql:
  enabled: true
  postgresqlUsername: iriusrisk
  postgresqlPassword: iriusrisk
  postgresqlDatabase: iriusrisk
  listenAddresses: "localhost, DB_HOSTS_IP_ADDRESS" #see installation page, which refers to: listen_addresses = 'localhost, DB_HOSTS_IP_ADDRESS'
  passwordAuth: "host all      all  172.17.0.0/24    md5" #Substituting "172.17.0.0/24" with the network interface address where the Tomcat server will reside. #otherwise: "host all      all  0.0.0.0/0    md5"
